################################################################################
# GNU Makefile For Distributing 3DProf
#
# GNU Utils required: Make, Tar, Mkdir, Cp, Install, Rm, Sh, Touch, Env
################################################################################


#*******************************************************************************
#                Configure Section. Modify This To Your Needs 
#*******************************************************************************

# nonstandard programs used by this Makefile
#VSCOMNTOOLS could be used after converting path to unix
devenv=env MAKEFLAGS="" "$$VS7DIR_CYGWIN/Common7/IDE/devenv.com"
proj_dir=src
basename=3DProf
sln_dir=.

update_website=sitecopy -u tn
create_zip=/c/bin/7za a -tzip -bd -r >/dev/null
create_sfx=/c/bin/7za a -r -bd -sfx7zC.sfx >/dev/null
extract_zip=/c/bin/7za x -tzip -bd >/dev/null
extract_sfx=/c/bin/7za x -t7z -bd >/dev/null
install=install -p
# NSIS Installer
make_nsis=/j/Programme/NSIS/makensis.exe


# Files which go into source distribution. More files will be added by
# the included $(basename).deps
sources:=$(basename).GNUMakefile $(basename)_make_deps.sh MakeDepsFunctions.sh\
 $(addprefix $(sln_dir)/$(basename)-Solution/, $(basename).sln) \
 $(addprefix $(proj_dir)/, TDProf/TDProf.sln)
-include $(basename).deps

# versioning
current_version:=$(shell grep ProductVersion "$(prj_3dp_msi)" | sed -e 's/^.*8:\(.*\).$$/\1/')
dist_state=-unstable

# distribution names w/o archive suffix
distdir=../dist
srcdist=3DProf-$(current_version)-src
bindist=3DProf-$(current_version)-bin
insdist=3DProf-$(current_version)

docdir=$(proj_dir)/TDProf/manual

# local web directory to copy dist archives before updating website
html_dir_down=/x/home/bertw/proj/www/tn/html/proj/tdprof/download
html_dir_misc=/x/home/bertw/proj/www/tn/html/proj/tdprof/misc
html_dir_img=/x/home/bertw/proj/www/tn/html/proj/tdprof/img




build_and_test: build testing
build: $(distdir)/$(bindist).sfx.exe $(distdir)/$(srcdist).sfx.exe
all: build www_remote



#*******************************************************************************
#                               Distributions
#*******************************************************************************
#
#
#  Rules:
#  * bindist $(distdir)/$(bindist).sfx.exe: Binary distribution
#  * bindist-msi BinInstaller/Release/3DProf.msi:  Binary MSI isntaller
#  * testing: interactive testing of $(distdir)/$(bindist).sfx.exe
#  * srcdist $(distdir)/$(srcdist).sfx.exe: Source distribution
#

#-------------------------------------------------------------------------------
#  Binary ZIP and MSI Distribution
#-------------------------------------------------------------------------------


version.txt : $(prj_3dp_msi)
	echo $(current_version) > version.txt

###begin bindist
bindist_root_files=$(bin_tdprof_exe) $(bin_menu_img_lib) $(bin_r6p_msi) \
 $(addprefix $(proj_dir)/TDProf/, news.txt TroubleShooting.txt tdprof.exe.manifest) \
 $(bin_wio_dll) $(bin_wio_sys) $(bin_r6p_sys) $(bin_r6clk_dll) $(bin_clocker)
bindist_root_dbgfiles=$(proj_dir)/bin/Debug/TDProf.pdb

bindist_etc_files=$(bin_free_ram) $(bin_det_3dapi)  \
 $(bin_tdprof_gd) $(bin_repl_icon) $(bin_tdprof_sl) \
 $(bin_r6_sys) $(bin_r6_vxd) $(bin_r6clk_exe)       \
 $(bin_nvc_exe) $(bin_nvc_dll) $(bin_nvc_log) $(bin_wio_dll) $(bin_wio_sys) \
 $(proj_dir)/TDProf/TODO.txt version.txt

bindist_spec_files=$(proj_dir)/TDProf/specfiles/*.cfg $(proj_dir)/TDProf/specfiles/README.txt
bindist_uspec_files=$(proj_dir)/TDProf/usr-specfiles/README.txt
bindist_de_files=$(proj_dir)/bin/Release/de/*.dll
bindist_man_files=$(docdir)/all.html

bindist_deps= $(bindist_root_files) $(bindist_etc_files) \
 $(bindist_spec_files) $(bindist_uspec_files) \
 $(bindist_de_files)  $(proj_dir)/bin/Debug/TDProf.exe


builddir_bin_root=build/bindist
builddir_bin=$(builddir_bin_root)/3DProf

bindist $(distdir)/$(bindist).sfx.exe : $(bindist_deps)
	@mkdir -p $(distdir)
	-rm -f $(distdir)/$(bindist).sfx.exe
	rm -rf $(builddir_bin_root)
	mkdir -p $(addprefix $(builddir_bin)/, de etc specfiles usr-specfiles manual manual/img/en manual/img/de) 
	$(install) $(bindist_root_files)   $(bindist_root_dbgfiles)  	$(builddir_bin)/
	$(install) $(bindist_etc_files)    				$(builddir_bin)/etc/
	$(install) $(bindist_spec_files)   				$(builddir_bin)/specfiles/
	$(install) $(bindist_uspec_files)  				$(builddir_bin)/usr-specfiles/
	$(install) $(bindist_de_files)     				$(builddir_bin)/de/
	$(install) $(bindist_man_files)    				$(builddir_bin)/manual/
	$(install) $(proj_dir)/bin/Debug/TDProf.exe    			$(builddir_bin)/TDProf_Debug.exe
	cd $(builddir_bin_root) && $(create_sfx) $(bindist).sfx.exe '*'
	mv $(builddir_bin_root)/$(bindist).sfx.exe $(distdir)/

3dprof_nsi=3DProf.nsi 
3dprof_nsi_generator_msg=";; Automatically Generated by $(MAKEFILE_LIST). Do not edit!"
bindist_nsis $(distdir)/$(insdist).exe : $(bindist_deps) $(3dprof_nsi) version.txt
	@(echo $(3dprof_nsi_generator_msg) &&\
	echo '!define PRODUCT_VERSION' \"$(current_version)\" \
 )> 3DProf_Version.nsh
	@(echo $(3dprof_nsi_generator_msg) &&\
	echo '  SetOverwrite on' &&\
	echo '  SetOutPath "$$INSTDIR"' &&\
	for i in $(bindist_root_files);  do echo '  File' \"$$i\" | sed 's,/,\\,g'; done; &&\
	echo '  SetOutPath "$$INSTDIR\etc"'; &&\
	for i in $(bindist_etc_files);   do echo '  File' \"$$i\" | sed 's,/,\\,g'; done; &&\
	echo '  SetOutPath "$$INSTDIR\specfiles"'; &&\
	for i in $(bindist_spec_files);  do echo '  File' \"$$i\" | sed 's,/,\\,g'; done; &&\
	echo '  SetOutPath "$$INSTDIR\usr-specfiles"'; &&\
	for i in $(bindist_uspec_files); do echo '  File' \"$$i\" | sed 's,/,\\,g'; done; &&\
	echo '  SetOutPath "$$INSTDIR\de"'; &&\
	for i in $(bindist_de_files);    do echo '  File' \"$$i\" | sed 's,/,\\,g'; done; &&\
	echo '  SetOutPath "$$INSTDIR\manual"'; &&\
	for i in $(bindist_man_files);   do echo '  File' \"$$i\" | sed 's,/,\\,g'; done; &&\
) >3DProf_Bin_Files.nsh
	@(echo $(3dprof_nsi_generator_msg) &&\
	for i in $(bindist_root_files);  do echo '  Delete' \"\$$INSTDIR\\$$i\"                | sed 's,/,\\,g'; done; &&\
	for i in $(bindist_etc_files);   do echo '  Delete' \"\$$INSTDIR\\etc\\$$i\"           | sed 's,/,\\,g'; done; &&\
	for i in $(bindist_spec_files);  do echo '  Delete' \"\$$INSTDIR\\specfiles\\$$i\"     | sed 's,/,\\,g'; done; &&\
	for i in $(bindist_uspec_files); do echo '  Delete' \"\$$INSTDIR\\usr-specfiles\\$$i\" | sed 's,/,\\,g'; done; &&\
	for i in $(bindist_de_files);    do echo '  Delete' \"\$$INSTDIR\\de\\$$i\"            | sed 's,/,\\,g'; done; &&\
	for i in $(bindist_man_files);   do echo '  Delete' \"\$$INSTDIR\\manual\\$$i\"        | sed 's,/,\\,g'; done; &&\
)  >3DProf_Bin_DeleteFiles.nsh
	@$(make_nsis)  $(3dprof_nsi)
	mv $(insdist).exe $(distdir)/ 


# Installer projects are not handled by 3DProf_make_deps.sh script. -XXX
#bindist-msi $(bin_3dp_msi) : $(sources) $(binaries) version.txt
#	$(devenv)  3DProf.sln /build Release /project BinInstaller





#-------------------------------------------------------------------------------
#   Testing Binaries 
#-------------------------------------------------------------------------------
testing : testing/$(bindist) interactive_test.stamp


test_bindist testing/$(bindist) : $(distdir)/$(bindist).sfx.exe
	rm -rf testing/$(bindist); mkdir -p testing/$(bindist)
	cd testing/$(bindist) && $(extract_sfx) ../../$(distdir)/$(bindist).sfx.exe


XXXinteractive_test.stamp : testing/$(bindist)
	cd testing/$(bindist)/3DProf && ./tdprof.exe &&\
 cp ../../../src/bin/Debug/profiles.cfg ./ &&\
 ./tdprof_debug.exe &&\
 ./tdprof_debug.exe -specfile ./specfiles/ati-r300-win5.cfg &&\
 (./tdprof_debug.exe -specfile ./specfile/does_not_exist.cfg || :) &&\
 ./tdprof_debug.exe -run "High Quality" &&\
 (./tdprof_debug.exe -run "No Such Profile" || :)
	touch  interactive_test.stamp
interactive_test.stamp : testing/$(bindist)
	cd testing/$(bindist)/3DProf &&\
 ./tdprof.exe  -selftest &&\
 ./tdprof.exe &&\
 cp ../../../src/bin/Debug/profiles.cfg ./ && ./tdprof_debug.exe &&\
 (env TDPROF_DEBUG= ./tdprof.exe) &&\
 ./tdprof_debug.exe -run "High Quality" &&\
	touch  interactive_test.stamp
#### end bindist



#-------------------------------------------------------------------------------
#   Build source distribution archive
#-------------------------------------------------------------------------------
### begin srcdist
builddir_src_root=build/srcdist
builddir_src=$(builddir_src_root)/3DProfSource

srcdist $(distdir)/$(srcdist).sfx.exe : $(sources)
	@mkdir -p $(distdir)
	-rm -f $(distdir)/$(srcdist).sfx.exe
	rm -rf $(builddir_src_root) && mkdir -p  $(builddir_src)
	@tar -cf- $(sources) $(project_files) | tar -xf- -C $(builddir_src) ; chmod -R +rw $(builddir_src)
	cd $(builddir_src_root) && $(create_sfx) $(srcdist).sfx.exe '*'
	mv $(builddir_src_root)/$(srcdist).sfx.exe $(distdir)/
### end srcdist

check_abs_paths: FORCE
	if  grep -v "HintPath" $(project_files) | grep -e ':\\'; then false; else :; fi



#*******************************************************************************
#                                   WWW Stuff
#*******************************************************************************
#
#  Rules:
#  * www_local_shots:  Takes some screenshots and safe them to local webdirectory
#  * www_local:        Rebuilds local web directory (except for the shots)
#  * www_remote:       Rebuilds local and remote web directory (except for the shots)


#-------------------------------------------------------------------------------
#   Update Local Web Directory
#-------------------------------------------------------------------------------

### make local files
www_local: build_and_test $(addprefix $(html_dir_misc)/, ati-r300-win.cfg.txt nvidia-common-win.cfg.txt) \
 $(addprefix $(html_dir_down)/, $(bindist).sfx.exe $(srcdist).sfx.exe $(insdist).msi $(insdist).exe  file_dates.txt) www_local_version

### Create screenshots in local web directory.
www_local_shots :
	cd src/bin/Debug \
&& ./tdprof.exe -profile "No One Lives Forever" -lang en -screenshots && $(install) ../../../$(docdir)/img/en/tdprof_*.png $(html_dir_img)/ \
&& ./tdprof.exe -profile "No One Lives Forever" -lang de -screenshots && $(install) ../../../$(docdir)/img/de/tdprof_*.png $(html_dir_img)/de/

### copy example files
$(html_dir_misc)/ati-r300-win.cfg.txt : $(dir_tdprof_exe)/specfiles/ati-r300-win.cfg
	cp $(dir_tdprof_exe)/specfiles/ati-r300-win.cfg $(html_dir_misc)/ati-r300-win.cfg.txt
$(html_dir_misc)/nvidia-common-win.cfg.txt : $(dir_tdprof_exe)/specfiles/nvidia-common-win.cfg
	cp $(dir_tdprof_exe)/specfiles/nvidia-common-win.cfg $(html_dir_misc)/nvidia-common-win.cfg.txt



### copy distribution archives to html directory

www_local_bindist $(html_dir_down)/$(bindist).sfx.exe : $(distdir)/$(bindist).sfx.exe
	$(install) $(distdir)/$(bindist).sfx.exe $(html_dir_down)

www_local_srcdist $(html_dir_down)/$(srcdist).sfx.exe : $(distdir)/$(srcdist).sfx.exe
	$(install) $(distdir)/$(srcdist).sfx.exe $(html_dir_down)

www_local_nsis    $(html_dir_down)/$(insdist).exe :     $(distdir)/$(insdist).exe
	$(install) $(distdir)/$(insdist).exe     $(html_dir_down)

www_local_msi     $(html_dir_down)/$(insdist).msi :     $(bin_3dp_msi)
	$(install) "$(bin_3dp_msi)" $(html_dir_down)/$(insdist).msi




### create a text file showing the release dates
file_dates $(html_dir_down)/file_dates.txt : FORCE
	cd $(html_dir_down) && ls -nGlht tdprof*.sfx.exe *.msi | sed -e "s/^...........................//" > file_dates.txt


### version numbers in web page
www_local_version $(html_dir_down)/version$(dist_state).txt : FORCE
	$(install) version.txt $(html_dir_down)/version$(dist_state).txt
	cd $(html_dir_down) && sh ./update_version.sh
######


#-------------------------------------------------------------------------------
#   Update Remote Web Directory
#-------------------------------------------------------------------------------

www_remote: www_local
	$(update_website)

www_remote_shots: www_local_shots
	$(update_website)








#*******************************************************************************
#                                 Maintenance
#*******************************************************************************
#
#  * clean
#  * $(basename).deps

print-%:
	@echo $* = $($*)

printvars:
	@$(foreach V,$(sort $(.VARIABLES)), \
           $(if $(filter-out environment% default automatic, \
           $(origin $V)),$(warning $V=$($V) ($(value $V)))))

loc metrics:
	@echo -n "LOC in tdprof.exe w/o blank lines:  " && ls -1 $(src_tdprof_exe) | grep -i -e '.cs$$'     | xargs grep -hve '^$$' | wc -l
	@echo -n "LOC in C sources w/o blank lines:   " && ls -1 $(sources) | grep -i -e '.cpp$$' -e '.c$$' | xargs grep -hve '^$$' | wc -l
	@echo -n "LOC in ASM sources w/o blank lines: " && ls -1 $(sources) | grep -i -e '.asm$$'           | xargs grep -hve '^$$' | wc -l

clean:
	rm -f *~ $(distdir)/$(srcdist).sfx.exe $(distdir)/$(bindist).sfx.exe

## Let a shell program extract source files from VS project files. It
## creates also a build-rule for each project
deps $(basename).deps : 3DProf.GNUMakefile ./$(basename)_make_deps.sh MakeDepsFunctions.sh $(project_files)
	bash ./$(basename)_make_deps.sh $(proj_dir) > $(basename).deps

FORCE:
.PHONY : deps FORCE clean bindist srcdist www_local www_remote www_local_bindist www_local_msi www_local_srcdist \
www_local_shots shots www_local_version bindist_nsis $(phony_targets) check_abs_paths


